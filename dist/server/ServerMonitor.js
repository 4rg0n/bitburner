import { Log } from "lib/Log";
import { ProgressBar, Progression } from "ui/ProgressBars";
import { ServerInfo } from "server/Scanner";
export class ServerMonitor {
    static MaxServerGrowth = 100;
    static MaxHackDifficulty = 100;
    ns;
    hosts;
    log;
    bars;
    constructor(ns, hosts = []) {
        this.ns = ns;
        this.hosts = hosts;
        this.log = new Log(ns);
        this.bars = {};
        this.bars.securityBar = new Progression(new ProgressBar(10));
        this.bars.loadBar = new Progression(new ProgressBar(10));
        this.bars.hackSkillBar = new Progression(new ProgressBar(10), undefined, [Progression.Templates.Bar, Progression.Templates.Ratio]);
        this.bars.moneyBar = new Progression(new ProgressBar(10), undefined, [Progression.Templates.Bar, Progression.Templates.Ratio]);
        this.bars.growBar = new Progression(new ProgressBar(10));
    }
    monitor() {
        const serverInfos = ServerInfo.get(this.ns, this.hosts);
        this.display(serverInfos);
    }
    display(serverInfos) {
        for (const serverInfo of serverInfos) {
            this.log.add(`${serverInfo.hostname} (${serverInfo.type}):`)
                .add(`  Security:\t${this.bars.securityBar.setProgress(serverInfo.hackDifficulty, ServerMonitor.MaxHackDifficulty)}`)
                .add(`  Load: \t${this.bars.loadBar.setProgress(serverInfo.ramUsed, serverInfo.maxRam)}`)
                .add(`  Skill: \t${this.bars.hackSkillBar.setProgress(this.ns.getHackingLevel(), serverInfo.requiredHackingSkill)}`)
                .add(`  Money:\t${this.bars.moneyBar.setProgress(serverInfo.moneyAvailable, serverInfo.moneyMax)}`)
                .add(`  Grow: \t${this.bars.growBar.setProgress(serverInfo.serverGrowth, ServerMonitor.MaxServerGrowth)}`)
                .add("");
        }
        this.log.display();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VydmVyTW9uaXRvci5qcyIsInNvdXJjZVJvb3QiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvc291cmNlcy8iLCJzb3VyY2VzIjpbInNlcnZlci9TZXJ2ZXJNb25pdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDOUIsT0FBTyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFNUMsTUFBTSxPQUFPLGFBQWE7SUFDdEIsTUFBTSxDQUFDLGVBQWUsR0FBRyxHQUFHLENBQUM7SUFDN0IsTUFBTSxDQUFDLGlCQUFpQixHQUFHLEdBQUcsQ0FBQztJQUUvQixFQUFFLENBQUk7SUFDTixLQUFLLENBQVU7SUFDZixHQUFHLENBQUs7SUFDUixJQUFJLENBQTRDO0lBRWhELFlBQVksRUFBTyxFQUFFLFFBQW1CLEVBQUU7UUFDdEMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBRWYsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM3RCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFdBQVcsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3pELElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksV0FBVyxDQUFDLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNuSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDL0gsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBRUQsT0FBTztRQUNILE1BQU0sV0FBVyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsT0FBTyxDQUFDLFdBQTBCO1FBQzlCLEtBQUssTUFBTSxVQUFVLElBQUksV0FBVyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsVUFBVSxDQUFDLFFBQVEsS0FBSyxVQUFVLENBQUMsSUFBSSxJQUFJLENBQUM7aUJBQ3ZELEdBQUcsQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsYUFBYSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQztpQkFDcEgsR0FBRyxDQUFDLGFBQWEsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7aUJBQ3hGLEdBQUcsQ0FBQyxjQUFjLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxFQUFFLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLENBQUM7aUJBQ25ILEdBQUcsQ0FBQyxhQUFhLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsY0FBYyxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO2lCQUNsRyxHQUFHLENBQUMsYUFBYSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLFlBQVksRUFBRSxhQUFhLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQztpQkFDekcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ2hCO1FBRUQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN2QixDQUFDIn0=
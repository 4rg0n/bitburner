import { Progression, ProgressBar } from "ui/ProgressBars";
import { asFormat } from "lib/utils";
/**
 * For controlling stats in the upper right over view element of the game
 */
export class StatsUI {
    keyWidth;
    valueWidth;
    doc;
    keysColumn;
    valuesColumn;
    constructor(keyWidth = 8, valueWidth = 24) {
        this.keyWidth = keyWidth;
        this.valueWidth = valueWidth;
        this.doc = document; // This is expensive! (25GB RAM) Perhaps there's a way around it? ;)
        this.keysColumn = this.doc.getElementById('overview-extra-hook-0');
        this.valuesColumn = this.doc.getElementById('overview-extra-hook-1');
    }
    /**
     * @param {UIModel} uiModel
     */
    update(uiModel) {
        try {
            const keys = Object.keys(uiModel);
            const values = Object.values(uiModel);
            keys.unshift("_".repeat(this.keyWidth));
            values.unshift("_".repeat(this.valueWidth));
            keys.push("‾".repeat(this.keyWidth));
            values.push("‾".repeat(this.valueWidth));
            if (this.keysColumn === null || this.valuesColumn === null) {
                throw "No HTML elements in column";
            }
            this.keysColumn.innerText = keys.join("\n");
            this.valuesColumn.innerText = values.join("\n");
        }
        catch (err) {
            console.warn("StatsUI update skipped: ", err);
        }
    }
}
export class UIModel {
    Money;
    Rep;
    Script_Money;
    Script_Exp;
    Str_Exp;
    Def_Exp;
    Dex_Exp;
    Agi_Exp;
    Chr_Exp;
    Prv_Load;
    Home_Load;
    constructor(rep = 0, money = 0, incPerSec = 0, scrExp = 0, strExp = 0, defExpP = 0, dexExpP = 0, agiExp = 0, chrExp = 0, pServerUsedGB = 0, pServerMaxGB = 0, hServerUsedGB = 0, hServerMaxGB = 0) {
        this.Money = new ValueTimeUnit(money, "$", "m");
        this.Rep = new ValueTimeUnit(rep, "r", "s");
        this.Script_Money = new ValueTimeUnit(incPerSec, "$", "s");
        this.Script_Exp = new ValueTimeUnit(scrExp, "xp", "s");
        this.Str_Exp = new ValueTimeUnit(strExp, "xp", "s");
        this.Def_Exp = new ValueTimeUnit(defExpP, "xp", "s");
        this.Dex_Exp = new ValueTimeUnit(dexExpP, "xp", "s");
        this.Agi_Exp = new ValueTimeUnit(agiExp, "xp", "s");
        this.Chr_Exp = new ValueTimeUnit(chrExp, "xp", "s");
        this.Prv_Load = new Progression(new ProgressBar(10), Progression.Format.Byte, [Progression.Templates.Value, Progression.Templates.Bar]).setProgress(pServerUsedGB, pServerMaxGB);
        this.Home_Load = new Progression(new ProgressBar(10), Progression.Format.Byte, [Progression.Templates.Value, Progression.Templates.Bar]).setProgress(hServerUsedGB, hServerMaxGB);
    }
}
class ValueTimeUnit {
    value;
    unit;
    timeUnit;
    constructor(value, unit = "", timeUnit = "") {
        this.value = value;
        this.unit = unit;
        this.timeUnit = timeUnit;
    }
    toString() {
        let text = asFormat(this.value);
        if (this.unit != "") {
            text += " " + this.unit;
        }
        if (this.timeUnit != "") {
            text += "/" + this.timeUnit;
        }
        return text;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhdHNVSS5qcyIsInNvdXJjZVJvb3QiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvc291cmNlcy8iLCJzb3VyY2VzIjpbInVpL1N0YXRzVUkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXJDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLE9BQU87SUFFbkIsUUFBUSxDQUFRO0lBQ2hCLFVBQVUsQ0FBUztJQUNuQixHQUFHLENBQVU7SUFDYixVQUFVLENBQW9CO0lBQzlCLFlBQVksQ0FBb0I7SUFFaEMsWUFBWSxRQUFRLEdBQUcsQ0FBQyxFQUFFLFVBQVUsR0FBRyxFQUFFO1FBQ3hDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxHQUFHLEdBQUcsUUFBUSxDQUFDLENBQUMsb0VBQW9FO1FBRXpGLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLHVCQUF1QixDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUVEOztPQUVHO0lBQ0gsTUFBTSxDQUFDLE9BQWlCO1FBQ3ZCLElBQUk7WUFDSCxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ2xDLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFdEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3hDLE1BQU0s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